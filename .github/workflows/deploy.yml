name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & Cache dependencies
        id: cache-dependencies
        uses: LuisFuenTech/gha-cache-deps@v1.2.1
        with:
          node-manager: yarn
          lock-file: yarn.lock
      - name: Output Information
        run: echo "Cache used? ${{ toJson(steps.cache-dependencies.outputs) }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & Cache dependencies
        id: cache-dependencies
        uses: LuisFuenTech/gha-cache-deps@v1.2.1
        with:
          node-manager: yarn
          lock-file: yarn.lock
      - name: Output Information
        run: echo "Cache used? ${{ toJson(steps.cache-dependencies.outputs) }}"
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & Cache dependencies
        id: cache-deps
        uses: ./github/actions/cache-dependencies
        with:
          node-manager: yarn
          lock-file: yarn.lock
      - name: Output Information
        run: echo "Cache used? ${{ toJson(steps.cache-deps.outputs) }}"
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        id: deploy-site
        uses: ./.github/actions/deploy-s3-javascript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket-name: gha-custom-action-fuentech
          source-dir: ./dist
      - name: Output website URL
        run: echo "Deployed to ${{ steps.deploy-site.outputs.website-url }}"
